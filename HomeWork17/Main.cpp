#include<iostream>
#include<cstdlib>
#include<ctime>

double mean(double a, double b) {	// в функцию передаются параметры из блока main и присваиваются двум переменным a и b.
	return (a + b) / 2;				// возрат результата обратно в блок main откуда вызывалась данная функция.
}
double mean_arr(int array[], const int length) {	// в функцию передаются параметры из блока main.
	int sum = 0;	// создаем и инициализируем переменную суммы.
	for (int i = 0; i < length; i++) {	// перебираем каждый элемент в массиве.
		sum += array[i];				// и находим сумму всех элементов.
	}
	return sum / (double)length;		// результат функции возвращаем обратно в блок main, также предварительно преобразовав в тип double.
}
void initShowArray(int array[], int length) {	// в функцию передаются параметры из блока main.
	std::cout << "{ ";
	for (int i = 0; i < length; i++) {	// перебираем каждый элемент в массиве.
		array[i] = rand() % 10;			// инициализируем каждый элемент массива случайными числами [0..9].
		std::cout << array[i] << ' ';	// выводим в консоль каждый элемент массива.
	}
	std::cout << '}' << std::endl;
}
void powers(int N, int M) {				// в функцию передаются параметры из блока main и присваиваются двум переменным N и M.
	int pow = 1;	// создаем переменную и присваиваем ей значение 1.
	std::cout << N << " x 0 = 0;\n";	// выводим в консоль известное выражение (умножение на ноль).
	for (int i = 1; i <= M; i++) {		// перебираем каждый элемент в массиве от 1 до числа М.
		pow *= N;						// и находим произведение числа N с переменной pow.
		std::cout << N << " x " << i << " = " << pow;	// вывод в консоль резельтат умножения числа N и i.
		if (i == M)						// с помощью конструкции
			std::cout << '\n';			// if..else избавляемся от запятой в последней строке.
		else
			std::cout << ",\n";
	}
	std::cout << std::endl;
}
void showArray(int array[], int length) {	// в функции выводи все элементы массива в консоль, без возврата какого-либо значения результата в блок main.
	std::cout << "{ ";
	for (int i = 0; i < length; i++)
		std::cout << array[i] << ' ';		// вывод всех элементов в консоль.
	std::cout << '}' << std::endl;
}
void initNegAndPosArray(int array[], const int length) {	// в функцию передаем массив и его длину, без возврата результат.
	for (int i = 0; i < length; i++)					// в цикле присваиваем случайные значения каждому элементу массива
		array[i] = rand() % (10 - (-10)) + (-10);		// в диапазоне от -10 до 9, записывая по формуле (end - begin) + begin.
	std::cout << std::endl;
}
void positive_arr(int array[], const int length) {		// в функцию передаем массив и его длину, без возврата результат.
	for (int i = 0; i < length; i++)
		array[i] = array[i] < 0 ? -array[i] : array[i];	// избавляемся от знака минуса в элементах массива с помощью тернарного оператора.
}



int main() {
	setlocale(LC_ALL, "RU");
	int n, m;
	
	// Задача 1. Создайте функцию mean, которая возвращает среднее арифметическое двух переданных в неё чисел.
	// Не забудьте продемонстрировать её работу, вызвав функцию в блоке main.
	std::cout << "Задача 1. Функция по определению среднего арифметического значения двух чисел\n";
	std::cout << "Введите два целых числа -> ";
	std::cin >> n >> m;
	// Вызов функции mean и передача ей (функции) параметров (n и m) для нахождения 
	// среднее арифметическое значение из двух вводимых чисел:
	std::cout << "Среднее арифметическое чисел " << n << " и " << m << " равна " << mean(n, m) << std::endl;
	std::cout << std::endl;
	
	// Задача 2. Создайте функцию mean_arr. Она принимает массив и его длину, после чего возвращает
	// среднее арифметическое всех его элементов.
	std::cout << "Задача 2. Функция по определению среднего арифметического значения всех элементов массива.\n";
	const int size1 = 5;	// определяем кол-во элементов в массиве.
	int arr1[size1];		// создаем массив.
	std::cout << "Массив:\n";
	srand(time(NULL));
	// Инициализируем и выводим массив в консоль с помощью функции initShowArray(), передавая ей массив и его длину:
	initShowArray(arr1, size1);
	// Вызов функции mean_arr и передача ей параметров (массив и его длина) для определения 
	// среднего арифметического значения всех элементов массива:
	std::cout << "Среднее арифметическое значение всех элементов массива равна " << mean_arr(arr1, size1) << "\n\n";
	
	// Задача 3. Создайте функцию powers(N, M), которая принимает два числовых значения. Функция должна
	// выводить в консоль все степени числа N от степени 0 до степени M включительно.
	std::cout << "Задача 3. Нахождение степеней вводимого числа от степени 0 до необходимого.\n";
	std::cout << "Введите число, которое необходимо возвести в степень -> ";
	std::cin >> n;
	std::cout << "Введите степень (число), в которую необходимо возвести ранее вводимое число -> ";
	std::cin >> m;
	powers(n, m); // вызов функции powers() и передача ей значения двух переменных.
	
	// Задача 4. Создайте функцию positive_arr, которая принимает массив и его длину, после чего меняет в нём
	// все отрицательные значения на положительные. Сами положительные числа никак меняться не должны.
	std::cout << "Задача 4. Преобразование всех отрицательных элементов в массиве на положительные.\n";
	const int size3 = 10;
	int arr3[size3]{};
	srand(time(NULL));		// запускаем генератор случайных чисел.
	std::cout << "Изначальный массив:";
	// инициализируем массив с помощью функции initNegAndPosArray():
	initNegAndPosArray(arr3, size3);
	// выводим в консоль изначальный массив с помощью функции showArray(): 
	showArray(arr3, size3);
	// Преобразуем все отрицательные элементы массива в положительные с помощью функции positive_arr():
	positive_arr(arr3, size3);
	std::cout << "Преобразованный массив:\n";
	// выводим массив в консоль:
	showArray(arr3, size3);

	return 0;
}